#pragma once
#define	ZERO_BEGIN_ERROR		1
#define	ILLEGAL_STRCH_ERROR		2
#define	ILLEGAL_CHAR_ERROR		3
#define	ILLEGAL_STATE_ERROR		4
#define	ILLEGAL_ARRLEN_ERROR	5
#define	ILLEGAL_FACTOR_ERROR	6
#define	ILLEGAL_FORLOOP_ERROR	7
#define	ILLEGAL_PARALIST_ERROR	8
#define	ILLEGAL_VARDEF_ERROR	9
#define	EXPECT_SINQUO_ERROR		10
#define	EXPECT_DOUQUO_ERROR		11
#define	EXPECT_LPT_ERROR		12
#define	EXPECT_RPT_ERROR		13
#define	EXPECT_RBK_ERROR		14
#define	EXPECT_LBR_ERROR		15
#define	EXPECT_RBR_ERROR		16
#define	EXPECT_SEMI_ERROR		17
#define	EXPECT_TYPE_ERROR		18
#define	EXPECT_INT_ERROR		19
#define	EXPECT_CHAR_ERROR		20
#define	EXPECT_CONDITION_ERROR	21
#define	EXPECT_WHILE_ERROR		22
#define	EXPECT_RETURN_ERROR		23
#define EXPECT_MAIN_ERROR		24
#define	UNDEFINED_ID_ERROR		25
#define	UNDEFINED_CH_ERROR		26
#define	REDEFINED_VAR_ERROR		27
#define	TYPE_CONFLICT_ERROR		28
#define	ARRAY_OVERFLOW_ERROR	29
#define	SYMTAB_OVERFLOW_ERROR	30
#define INT_OVERFLOW_ERROR		31
#define DIV_ZERO_ERROR			32

#define EXPECT_ID_ERROR			33
#define EXPECT_LBK_ERROR		34
#define EXPECT_BECOME_ERROR		35
void error(int errorcode);