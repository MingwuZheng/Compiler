SET foo1  
ENTER   
ADD a b #1
RET #1  
EXIT   
SET add  
ENTER   
ADD a b #1
RET #1  
EXIT   
SET addchar  
ENTER   
ADD a b #1
RET #1  
EXIT   
SET addone  
ENTER   
ADD a 1 #1
RET #1  
EXIT   
SET addint  
ENTER   
ADD a 1 #1
RET #1  
EXIT   
SET foo2  
ENTER   
GTR c 99 #1
BZ $LABEL1 #1 
RET '/'  
GOTO $LABEL2  
SET $LABEL1  
RET '*'  
SET $LABEL2  
EXIT   
SET test_string_int  
ENTER   
BECOME 1  a
PRINT a  
BECOME 0  a
PRINT a  
BECOME 0  a
PRINT a  
NEG 0  #1
BECOME #1  a
PRINT a  
BECOME 12  a
PRINT a  
NEG 12  #2
BECOME #2  a
PRINT a  
PRINTS 0  
RET   
EXIT   
SET fib  
ENTER   
EQL n 1 #1
BZ $LABEL3 #1 
RET 1  
GOTO $LABEL4  
SET $LABEL3  
EQL n 2 #2
BZ $LABEL5 #2 
RET 1  
GOTO $LABEL6  
SET $LABEL5  
SET $LABEL6  
SET $LABEL4  
SUB n 1 #3
PUSH #3 fib 
CALL fib  #4
SUB n 2 #5
PUSH #5 fib 
CALL fib  #6
ADD #4 #6 #7
RET #7  
EXIT   
SET test_lots_paras  
ENTER   
ADD a b #1
ADD #1 c #2
SUB #2 d #3
ADD #3 e #4
RET #4  
EXIT   
SET test_all_cond  
ENTER   
BECOME 1  a
BECOME 2  b
BECOME 2  c
BECOME 'A'  d
PRINTS 1  
EQL b c #1
BZ $LABEL7 #1 
PRINTS 2  
GOTO $LABEL8  
SET $LABEL7  
SET $LABEL8  
LES a b #2
BZ $LABEL9 #2 
PRINTS 3  
GOTO $LABEL10  
SET $LABEL9  
SET $LABEL10  
GTR c a #3
BZ $LABEL11 #3 
PRINTS 4  
GOTO $LABEL12  
SET $LABEL11  
SET $LABEL12  
NEQ d 0 #4
BZ $LABEL13 #4 
PRINTS 5  
GOTO $LABEL14  
SET $LABEL13  
SET $LABEL14  
EQL a 1 #5
BZ $LABEL15 #5 
PRINTS 6  
GOTO $LABEL16  
SET $LABEL15  
SET $LABEL16  
NEQ a 1 #6
BZ $LABEL17 #6 
PRINTS 6  
GOTO $LABEL18  
SET $LABEL17  
SET $LABEL18  
LEQ a c #7
BZ $LABEL19 #7 
PRINTS 7  
GOTO $LABEL20  
SET $LABEL19  
SET $LABEL20  
GEQ a c #8
BZ $LABEL21 #8 
PRINTS 8  
GOTO $LABEL22  
SET $LABEL21  
SET $LABEL22  
GTR d 66 #9
BZ $LABEL23 #9 
PRINTS 8  
GOTO $LABEL24  
SET $LABEL23  
SET $LABEL24  
RET   
EXIT   
SET test_diff_domain  
ENTER   
PRINTC 98  
BECOME 222  G_v_int_a1
PRINT G_v_int_a1  
PRINTS 9  
PRINT 1  
PRINTC 102  
PRINTC 98  
PRINTC 98  
PRINT 2  
PRINT 3  
ARYS 2 'H' g_v_char_arr
ARYL g_v_char_arr 2 #1
PRINTC #1  
ARYS 6 155 g_v_int_arr2
ARYL g_v_int_arr2 6 #2
PRINT #2  
PRINTS 10  
PRINT para_change  
MUL para_change 2 #3
BECOME #3  para_change
PRINTS 11  
PRINT para_change  
BECOME 'Y'  g_v_char_b
PRINTC g_v_char_b  
EXIT   
SET test_expr  
ENTER   
PRINTS 12  
NEG -12  #1
SUB #1 -12 #2
SUB #2 -12 #3
SUB #3 12 #4
ADD #4 -12 #5
SUB #5 -12 #6
SUB #6 -12 #7
SUB #7 -12 #8
SUB #8 -12 #9
BECOME #9  res_of_expr
PRINTS 13  
PRINT res_of_expr  
MUL 10 -5 #10
BECOME #10  res_of_expr
PRINTS 14  
PRINT res_of_expr  
DIV 10 4 #11
BECOME #11  res_of_expr
PRINTS 15  
PRINT res_of_expr  
PUSH 12 fib 
CALL fib  #12
PUSH 14 fib 
CALL fib  #13
SUB #12 #13 #14
BECOME #14  res_of_expr
PRINTS 16  
PRINT res_of_expr  
ADD 99 12 #15
BECOME #15  res_of_expr
PRINTS 17  
PRINT res_of_expr  
MUL 99 12 #16
DIV #16 1 #17
BECOME #17  res_of_expr
PRINTS 18  
PRINT res_of_expr  
ADD 12 1 #18
SUB 1 #18 #19
BECOME #19  res_of_expr
PRINTS 19  
PRINT res_of_expr  
ARYS 1 15 arr
ARYL arr 1 #20
MUL #20 98 #21
PUSH 3 fib 
CALL fib  #22
ADD #21 #22 #23
BECOME #23  res_of_expr
PRINTS 20  
PRINT res_of_expr  
BECOME 5  G_v_int_a1
ARYS 6 12 tag
BECOME 'h'  g_v_char_h
PUSH g_v_char_h addone 
CALL addone  #24
PUSH 5 fib 
CALL fib  #25
PUSH 1 add 
PUSH #25 add 
CALL add  #26
DIV #26 G_v_int_a1 #27
ADD #24 #27 #28
ARYL tag 6 #29
SUB #28 #29 #30
BECOME #30  res_of_expr
PRINTS 21  
PRINT res_of_expr  
RET   
EXIT   
SET test_scanf  
ENTER   
PRINTS 22  
SCAN a  
PRINT a  
PRINTS 23  
SCAN a  
SCAN b  
PRINT a  
PRINT b  
RET   
EXIT   
SET echo_char  
ENTER   
PRINTC a  
RET a  
EXIT   
SET really_void  
ENTER   
EXIT   
SET really_void2  
ENTER   
EXIT   
SET really_void3  
ENTER   
EXIT   
SET permutation  
ENTER   
SUB n 1 #1
LES m #1 #2
BZ $LABEL25 #2 
ADD m 1 #3
PUSH #3 permutation 
PUSH n permutation 
CALL permutation  #4
ADD m 1 #5
BECOME #5  i
SET $LABEL26  
LES i n #6
BZ $LABEL27 #6 
ARYL chs m #7
BECOME #7  t
ARYL chs i #8
ARYS m #8 chs
ARYS i t chs
ADD m 1 #9
PUSH #9 permutation 
PUSH n permutation 
CALL permutation  #10
ARYL chs m #11
BECOME #11  t
ARYL chs i #12
ARYS m #12 chs
ARYS i t chs
ADD i 1 #13
BECOME #13  i
GOTO $LABEL26  
SET $LABEL27  
GOTO $LABEL28  
SET $LABEL25  
BECOME 0  i
SET $LABEL29  
ARYL chs i #14
PUSH #14 echo_char 
CALL echo_char  #15
BECOME #15  r
ARYL chs i #16
NEQ r #16 #17
BZ $LABEL30 #17 
PRINTS 6  
GOTO $LABEL31  
SET $LABEL30  
SET $LABEL31  
ADD i 1 #18
BECOME #18  i
LES i 5 #19
BNZ $LABEL29 #19 
PRINTS 24  
SET $LABEL28  
EXIT   
SET main  
ENTER   
BECOME 0  i
SET $LABEL32  
LES i 10 #1
BZ $LABEL33 #1 
ADD i 1 #2
PUSH #2 fib 
CALL fib  #3
ARYS i #3 arr
ADD i 1 #4
BECOME #4  i
GOTO $LABEL32  
SET $LABEL33  
PRINTS 25  
SCAN user_input1  
SCAN user_input2  
SUB user_input1 1 #5
BECOME #5  i
SET $LABEL34  
PRINTS 24  
ARYL arr i #6
PRINT #6  
ADD i 1 #7
BECOME #7  i
LES i user_input2 #8
BNZ $LABEL34 #8 
SUB user_input2 1 #9
BECOME #9  i
SET $LABEL35  
SUB user_input1 1 #10
GEQ i #10 #11
BZ $LABEL36 #11 
PRINTS 24  
ARYL arr i #12
PRINT #12  
SUB i 1 #13
BECOME #13  i
GOTO $LABEL35  
SET $LABEL36  
PUSH 1 foo1 
PUSH 'b' foo1 
CALL foo1  #14
PRINT #14  
PUSH 1 add 
PUSH 2 add 
CALL add  #15
PRINT #15  
PUSH 'a' addchar 
PUSH 'b' addchar 
CALL addchar  #16
PRINT #16  
PUSH 'F' addone 
CALL addone  #17
PRINT #17  
PUSH 16 addint 
CALL addint  #18
PRINT #18  
PUSH 'c' foo2 
CALL foo2  #19
PRINTC #19  
CALL test_string_int  #20
PUSH 233 test_diff_domain 
CALL test_diff_domain  #21
CALL test_expr  #22
CALL test_all_cond  #23
CALL test_scanf  #24
PUSH 'a' echo_char 
CALL echo_char  #25
PUSH 1 test_lots_paras 
PUSH 2 test_lots_paras 
PUSH 'c' test_lots_paras 
PUSH 'd' test_lots_paras 
PUSH 5 test_lots_paras 
CALL test_lots_paras  #26
PRINT #26  
CALL really_void  #27
CALL really_void2  #28
CALL really_void3  #29
ARYS 0 'A' chs
ARYS 1 'B' chs
ARYS 2 'C' chs
ARYS 3 'D' chs
ARYS 4 'E' chs
PRINTS 26  
PUSH 0 permutation 
PUSH 5 permutation 
CALL permutation  #30
RET   
EXIT   
i
DIV 34 4 #119
MUL #119 6 #120
DIV 122 10 #121
ADD #120 #121 #122
ARYL t_array2 #122 #123
DIV #123 23 #124
MUL 22 i #125
DIV #125 23 #126
ARYL t_array2 1 #127
MUL #127 1000 #128
MUL #126 #128 #129
DIV #129 1000 #130
DIV 57 17 #131
ADD #130 #131 #132
ARYL t_array2 #132 #133
DIV #133 30 #134
ADD #124 #134 #135
ARYL t_array2 #135 #136
PUSH #136 factorial 
CALL factorial  #137
PRINT #137  
GOTO $LABEL61  
SET $LABEL58  
SET $LABEL61  
RET   
EXIT   
