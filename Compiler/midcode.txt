SET recursive_cal  
ENTER   
EQL cur_pointer amount #1
BZ $LABEL1 #1 
ARYL f 0 #2
PRINT #2  
BECOME 1  i
SET $LABEL2  
LES i amount #3
BZ $LABEL3 #3 
PRINTS 0  
ARYL f i #4
PRINT #4  
ADD i 1 #5
BECOME #5  i
GOTO $LABEL2  
SET $LABEL3  
PRINTS 1  
RET 0  
GOTO $LABEL4  
SET $LABEL1  
LES cur_pointer amount #6
BZ $LABEL5 #6 
BECOME min  i
SET $LABEL6  
ADD cur_pointer numbers_to_be_selected #7
SUB #7 amount #8
ADD #8 1 #9
LEQ i #9 #10
BZ $LABEL7 #10 
ARYS cur_pointer i f
ADD cur_pointer 1 #11
ADD #11 0 #12
ADD i 1 #13
ADD #13 0 #14
PUSH #12 recursive_cal 
PUSH #14 recursive_cal 
CALL recursive_cal  #15
NEG 1  #16
EQL #15 #16 #17
BZ $LABEL8 #17 
NEG 1  #18
RET #18  
GOTO $LABEL9  
SET $LABEL8  
SET $LABEL9  
ADD i 1 #19
BECOME #19  i
GOTO $LABEL6  
SET $LABEL7  
RET 0  
GOTO $LABEL10  
SET $LABEL5  
NEG 1  #20
RET #20  
SET $LABEL10  
SET $LABEL4  
EXIT   
SET initial  
ENTER   
BECOME 0  i
SET $LABEL11  
ARYS i var f
ADD i 1 #1
BECOME #1  i
LEQ i lenth #2
BNZ $LABEL11 #2 
RET   
EXIT   
SET echo_lower  
ENTER   
GEQ a 97 #1
BZ $LABEL12 #1 
LEQ a 122 #2
BZ $LABEL13 #2 
RET a  
GOTO $LABEL14  
SET $LABEL13  
PRINTS 2  
RET '0'  
SET $LABEL14  
GOTO $LABEL15  
SET $LABEL12  
PRINTS 2  
RET '0'  
SET $LABEL15  
EXIT   
SET test  
ENTER   
BECOME 'i'  test_letter_i
BECOME 'j'  test_letter_j
BECOME 'k'  test_letter_k
BECOME 'l'  test_letter_l
BECOME 109  test_letter_m
BECOME 110  test_letter_n
BECOME 111  test_letter_e
BECOME 112  test_letter_s
NEG 1  #1
ARYS 0 #1 a0
ARYL a0 0 #2
MUL #2 -2 #3
NEG #3  #4
ADD 99 0 #5
PUSH #5 echo_lower 
CALL echo_lower  #6
SUB 101 #6 #7
MUL #7 1 #8
DIV #8 1 #9
ADD #4 #9 #10
ARYS 1 #10 a0
ARYL a0 1 #11
NEQ #11 0 #12
BZ $LABEL16 #12 
PRINTS 2  
GOTO $LABEL17  
SET $LABEL16  
SET $LABEL17  
ARYL a0 0 #13
ADD #13 1 #14
PRINT #14  
ARYL a0 1 #15
PRINT #15  
PRINTC 116  
PRINT test_letter_e  
PRINT test_letter_s  
PRINTC 116  
PRINTS 1  
EXIT   
SET main  
ENTER   
CALL test  #1
SCAN numbers_to_be_selected  
SCAN amount  
ADD amount 1 #2
GTR #2 1000 #3
BZ $LABEL18 #3 
PRINTS 3  
RET   
GOTO $LABEL19  
SET $LABEL18  
SET $LABEL19  
ADD 0 0 #4
ADD amount 1 #5
MUL #5 1 #6
ADD #6 0 #7
PUSH #4 initial 
PUSH #7 initial 
CALL initial  #8
ADD 0 0 #9
ADD 1 0 #10
PUSH #9 recursive_cal 
PUSH #10 recursive_cal 
CALL recursive_cal  #11
NEG 1  #12
EQL #11 #12 #13
BZ $LABEL20 #13 
PRINTS 3  
GOTO $LABEL21  
SET $LABEL20  
SET $LABEL21  
EXIT   
5 test_base 
PUSH #6 test_base 
CALL test_base  #7
ADD a 0 #8
ADD A 0 #9
PUSH #8 get_gcd 
PUSH #9 get_gcd 
CALL get_gcd  #10
BECOME #10  a_var_int
PRINTS 7  
PRINT a_var_int  
SCANC c  
SCANC C  
ADD a 0 #11
ADD A 0 #12
ADD c 0 #13
ADD C 0 #14
PUSH #11 fourparam 
PUSH #12 fourparam 
PUSH #13 fourparam 
PUSH #14 fourparam 
CALL fourparam  #15
BECOME #15  C
PRINTS 8  
PRINTC C  
PRINTS 9  
PRINTC 65  
PRINTS 10  
MUL 1 2 #16
ADD 1 #16 #17
ADD #17 1 #18
ARYL a_var_char_arr #18 #19
PRINTC #19  
RET   
EXIT   

PRINT a  
PRINTS 5  
PRINT b  
PRINTS 6  
PRINT c  
PRINTS 7  
PRINT d  
PRINTS 8  
PRINT e  
PRINTS 9  
PRINT f  
PRINTS 10  
PRINT g  
BECOME 'x'  x
BECOME 'y'  y
PRINTS 1  
SUB c d #8
ARYL number4 90 #9
ADD #8 #9 #10
DIV #10 12 #11
ADD #11 32 #12
SUB y 120 #13
MUL x #13 #14
SUB #14 b #15
SUB #12 #15 #16
BECOME #16  letter_only
PRINTS 11  
PRINT letter_only  
ADD b c #17
ADD #17 c #18
ARYL array 0 #19
ADD #19 0 #20
PUSH #20 function1 
CALL function1  #21
ADD #18 #21 #22
BECOME #22  letter_only
PRINTS 12  
PRINT letter_only  
ARYL number4 90 #23
ARYL number4 99 #24
ADD #23 #24 #25
MUL #25 a #26
ADD 5 0 #27
PUSH #27 function1 
CALL function1  #28
MUL #28 b #29
ADD #26 #29 #30
SUB x 97 #31
ADD #31 -32 #32
SUB #32 -43 #33
MUL #30 #33 #34
BECOME #34  result_1
ARYL str7 118 #35
SUB #35 97 #36
MUL #36 32 #37
ADD #37 a #38
ADD #38 c #39
DIV d 43 #40
SUB #39 #40 #41
BECOME #41  g
PRINTS 13  
PRINT g  
PRINTS 1  
MUL g g #42
MUL #42 g #43
DIV #43 g #44
DIV #44 g #45
DIV #45 g #46
NEG #46  #47
SUB g 576 #48
ADD #48 0 #49
PUSH #49 function1 
CALL function1  #50
ADD #47 #50 #51
ARYS 12 #51 number4
ADD e f #52
SUB e f #53
MUL #52 #53 #54
DIV e f #55
DIV #54 #55 #56
ARYL number4 98 #57
ADD #56 #57 #58
CALL function_cal  #59
ADD #58 #59 #60
BECOME #60  result_2
ADD e f #61
SUB e f #62
MUL #61 #62 #63
DIV e f #64
DIV #63 #64 #65
ADD 6 0 #66
PUSH #66 function1 
CALL function1  #67
ADD #65 #67 #68
ARYL number4 12 #69
ADD #68 #69 #70
BECOME #70  result_3
PRINTS 1  
PRINTS 14  
PRINT result_2  
PRINTS 1  
PRINTS 15  
PRINT result_3  
PRINTS 1  
CALL function_cal  #71
ADD #71 10 #72
BECOME #72  result_4
PRINTS 1  
PRINTS 16  
PRINT result_1  
PRINTS 1  
PRINTS 17  
PRINT result_4  
PRINTS 1  
EXIT   
SET main  
ENTER   
ADD 12 13 #1
BECOME #1  out_num
SCAN in_num  
SCANC in_str  
SCANC out_str  
BECOME 0  i
SET $LABEL23  
LES i in_num #2
BZ $LABEL24 #2 
PRINTS 18  
PRINT i  
PRINTS 19  
ADD i 0 #3
PUSH #3 function1 
CALL function1  #4
PRINT #4  
PRINTS 1  
ADD i 1 #5
BECOME #5  i
GOTO $LABEL23  
SET $LABEL24  
ADD 6 0 #6
PUSH #6 function1 
CALL function1  #7
ADD #7 0 #8
PUSH #8 function1 
CALL function1  #9
SUB #9 19 #10
ADD #10 0 #11
PUSH #11 function1 
CALL function1  #12
BECOME #12  out_num
PRINTS 20  
PRINT out_num  
PRINTS 1  
CALL function3  #13
CALL function_cal  #14
ADD #14 10 #15
BECOME #15  out_num
PRINTS 21  
PRINT out_num  
PRINTS 1  
CALL function_cal  #16
ADD out_num #16 #17
BECOME #17  out_num
PRINTS 22  
PRINT out_num  
PRINTS 1  
CALL Complex_Compute  #18
RET   
EXIT   
 #20
PUSH 233 test_diff_domain 
CALL test_diff_domain  #21
CALL test_expr  #22
CALL test_all_cond  #23
CALL test_scanf  #24
PUSH 'a' echo_char 
CALL echo_char  #25
PUSH 1 test_lots_paras 
PUSH 2 test_lots_paras 
PUSH 'c' test_lots_paras 
PUSH 'd' test_lots_paras 
PUSH 5 test_lots_paras 
CALL test_lots_paras  #26
PRINT #26  
CALL really_void  #27
CALL really_void2  #28
CALL really_void3  #29
ARYS 0 'A' chs
ARYS 1 'B' chs
ARYS 2 'C' chs
ARYS 3 'D' chs
ARYS 4 'E' chs
PRINTS 26  
PUSH 0 permutation 
PUSH 5 permutation 
CALL permutation  #30
RET   
EXIT   
i
DIV 34 4 #119
MUL #119 6 #120
DIV 122 10 #121
ADD #120 #121 #122
ARYL t_array2 #122 #123
DIV #123 23 #124
MUL 22 i #125
DIV #125 23 #126
ARYL t_array2 1 #127
MUL #127 1000 #128
MUL #126 #128 #129
DIV #129 1000 #130
DIV 57 17 #131
ADD #130 #131 #132
ARYL t_array2 #132 #133
DIV #133 30 #134
ADD #124 #134 #135
ARYL t_array2 #135 #136
PUSH #136 factorial 
CALL factorial  #137
PRINT #137  
GOTO $LABEL61  
SET $LABEL58  
SET $LABEL61  
RET   
EXIT   
