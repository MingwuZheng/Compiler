SET fibo  
ENTER   
EQL n 1 #1
BZ $LABEL1 #1 
RET 1  
GOTO $LABEL2  
SET $LABEL1  
EQL n 2 #2
BZ $LABEL3 #2 
RET 1  
GOTO $LABEL4  
SET $LABEL3  
SUB n 1 #3
ADD #3 0 #4
PUSH #4 fibo 
CALL fibo  #5
SUB n 2 #6
ADD #6 0 #7
PUSH #7 fibo 
CALL fibo  #8
ADD #5 #8 #9
RET #9  
SET $LABEL4  
SET $LABEL2  
EXIT   
SET test_base  
ENTER   
NEG 11  #1
BECOME #1  A
EQL 1 1 #2
BZ $LABEL5 #2 
GTR 1 0 #3
BZ $LABEL6 #3 
NEQ 1 0 #4
BZ $LABEL7 #4 
PRINTS 0  
PRINT A  
GOTO $LABEL8  
SET $LABEL7  
SET $LABEL8  
GOTO $LABEL9  
SET $LABEL6  
SET $LABEL9  
GOTO $LABEL10  
SET $LABEL5  
SET $LABEL10  
NEG -11  #5
SUB #5 11 #6
ADD #6 -11 #7
ADD 5 0 #8
PUSH #8 fibo 
CALL fibo  #9
ADD #7 #9 #10
MUL 1 -2 #11
ADD #10 #11 #12
DIV 9 3 #13
SUB #12 #13 #14
BECOME #14  A
PRINTS 1  
PRINT A  
GTR input1 input2 #15
BZ $LABEL11 #15 
PRINTS 2  
RET   
GOTO $LABEL12  
SET $LABEL11  
LES input1 input2 #16
BZ $LABEL13 #16 
PRINTS 3  
RET   
GOTO $LABEL14  
SET $LABEL13  
EQL input1 input2 #17
BZ $LABEL15 #17 
PRINTS 4  
RET   
GOTO $LABEL16  
SET $LABEL15  
SET $LABEL16  
SET $LABEL14  
SET $LABEL12  
EXIT   
SET get_gcd  
ENTER   
GTR x y #1
BZ $LABEL17 #1 
BECOME x  temp
BECOME y  x
BECOME temp  y
GOTO $LABEL18  
SET $LABEL17  
SET $LABEL18  
DIV y x #2
BECOME #2  z
MUL z x #3
BECOME #3  z
SUB y z #4
EQL #4 0 #5
BZ $LABEL19 #5 
RET x  
GOTO $LABEL20  
SET $LABEL19  
SET $LABEL20  
DIV x 2 #6
BECOME #6  i
SET $LABEL21  
GTR i 1 #7
BZ $LABEL22 #7 
DIV x i #8
BECOME #8  z
MUL z i #9
BECOME #9  z
SUB x z #10
EQL #10 0 #11
BZ $LABEL23 #11 
DIV y i #12
BECOME #12  z
MUL z i #13
BECOME #13  z
SUB y z #14
EQL #14 0 #15
BZ $LABEL24 #15 
RET i  
GOTO $LABEL25  
SET $LABEL24  
SET $LABEL25  
GOTO $LABEL26  
SET $LABEL23  
SET $LABEL26  
SUB i 1 #16
BECOME #16  i
GOTO $LABEL21  
SET $LABEL22  
RET 1  
EXIT   
SET fourparam  
ENTER   
BECOME -22  temp
ADD a b #1
BECOME #1  a
ADD a b #2
BECOME #2  b
MUL a b #3
ADD #3 a #4
BECOME #4  a
ADD c a #5
BECOME #5  a
ADD d a #6
BECOME #6  a
ADD temp a #7
BECOME #7  a
PRINTS 5  
PRINT a  
RET d  
EXIT   
SET main  
ENTER   
BECOME 0  i
BECOME 5  len
BECOME 0  i
SET $LABEL27  
LES i len #1
BZ $LABEL28 #1 
ARYS i i a_var_int_arr
ADD i 1 #2
BECOME #2  i
GOTO $LABEL27  
SET $LABEL28  
BECOME 0  i
SET $LABEL29  
ARYS i 'a' a_var_char_arr
ADD i 1 #3
BECOME #3  i
LES i len #4
BNZ $LABEL29 #4 
PRINTS 6  
SCAN a  
SCAN A  
ADD a 0 #5
ADD A 0 #6
PUSH #5 test_base 
PUSH #6 test_base 
CALL test_base  #7
ADD a 0 #8
ADD A 0 #9
PUSH #8 get_gcd 
PUSH #9 get_gcd 
CALL get_gcd  #10
BECOME #10  a_var_int
PRINTS 7  
PRINT a_var_int  
SCANC c  
SCANC C  
ADD a 0 #11
ADD A 0 #12
ADD c 0 #13
ADD C 0 #14
PUSH #11 fourparam 
PUSH #12 fourparam 
PUSH #13 fourparam 
PUSH #14 fourparam 
CALL fourparam  #15
BECOME #15  C
PRINTS 8  
PRINTC C  
PRINTS 9  
PRINTC 65  
PRINTS 10  
MUL 1 2 #16
ADD 1 #16 #17
ADD #17 1 #18
ARYL a_var_char_arr #18 #19
PRINTC #19  
RET   
EXIT   

PRINT a  
PRINTS 5  
PRINT b  
PRINTS 6  
PRINT c  
PRINTS 7  
PRINT d  
PRINTS 8  
PRINT e  
PRINTS 9  
PRINT f  
PRINTS 10  
PRINT g  
BECOME 'x'  x
BECOME 'y'  y
PRINTS 1  
SUB c d #8
ARYL number4 90 #9
ADD #8 #9 #10
DIV #10 12 #11
ADD #11 32 #12
SUB y 120 #13
MUL x #13 #14
SUB #14 b #15
SUB #12 #15 #16
BECOME #16  letter_only
PRINTS 11  
PRINT letter_only  
ADD b c #17
ADD #17 c #18
ARYL array 0 #19
ADD #19 0 #20
PUSH #20 function1 
CALL function1  #21
ADD #18 #21 #22
BECOME #22  letter_only
PRINTS 12  
PRINT letter_only  
ARYL number4 90 #23
ARYL number4 99 #24
ADD #23 #24 #25
MUL #25 a #26
ADD 5 0 #27
PUSH #27 function1 
CALL function1  #28
MUL #28 b #29
ADD #26 #29 #30
SUB x 97 #31
ADD #31 -32 #32
SUB #32 -43 #33
MUL #30 #33 #34
BECOME #34  result_1
ARYL str7 118 #35
SUB #35 97 #36
MUL #36 32 #37
ADD #37 a #38
ADD #38 c #39
DIV d 43 #40
SUB #39 #40 #41
BECOME #41  g
PRINTS 13  
PRINT g  
PRINTS 1  
MUL g g #42
MUL #42 g #43
DIV #43 g #44
DIV #44 g #45
DIV #45 g #46
NEG #46  #47
SUB g 576 #48
ADD #48 0 #49
PUSH #49 function1 
CALL function1  #50
ADD #47 #50 #51
ARYS 12 #51 number4
ADD e f #52
SUB e f #53
MUL #52 #53 #54
DIV e f #55
DIV #54 #55 #56
ARYL number4 98 #57
ADD #56 #57 #58
CALL function_cal  #59
ADD #58 #59 #60
BECOME #60  result_2
ADD e f #61
SUB e f #62
MUL #61 #62 #63
DIV e f #64
DIV #63 #64 #65
ADD 6 0 #66
PUSH #66 function1 
CALL function1  #67
ADD #65 #67 #68
ARYL number4 12 #69
ADD #68 #69 #70
BECOME #70  result_3
PRINTS 1  
PRINTS 14  
PRINT result_2  
PRINTS 1  
PRINTS 15  
PRINT result_3  
PRINTS 1  
CALL function_cal  #71
ADD #71 10 #72
BECOME #72  result_4
PRINTS 1  
PRINTS 16  
PRINT result_1  
PRINTS 1  
PRINTS 17  
PRINT result_4  
PRINTS 1  
EXIT   
SET main  
ENTER   
ADD 12 13 #1
BECOME #1  out_num
SCAN in_num  
SCANC in_str  
SCANC out_str  
BECOME 0  i
SET $LABEL23  
LES i in_num #2
BZ $LABEL24 #2 
PRINTS 18  
PRINT i  
PRINTS 19  
ADD i 0 #3
PUSH #3 function1 
CALL function1  #4
PRINT #4  
PRINTS 1  
ADD i 1 #5
BECOME #5  i
GOTO $LABEL23  
SET $LABEL24  
ADD 6 0 #6
PUSH #6 function1 
CALL function1  #7
ADD #7 0 #8
PUSH #8 function1 
CALL function1  #9
SUB #9 19 #10
ADD #10 0 #11
PUSH #11 function1 
CALL function1  #12
BECOME #12  out_num
PRINTS 20  
PRINT out_num  
PRINTS 1  
CALL function3  #13
CALL function_cal  #14
ADD #14 10 #15
BECOME #15  out_num
PRINTS 21  
PRINT out_num  
PRINTS 1  
CALL function_cal  #16
ADD out_num #16 #17
BECOME #17  out_num
PRINTS 22  
PRINT out_num  
PRINTS 1  
CALL Complex_Compute  #18
RET   
EXIT   
 #20
PUSH 233 test_diff_domain 
CALL test_diff_domain  #21
CALL test_expr  #22
CALL test_all_cond  #23
CALL test_scanf  #24
PUSH 'a' echo_char 
CALL echo_char  #25
PUSH 1 test_lots_paras 
PUSH 2 test_lots_paras 
PUSH 'c' test_lots_paras 
PUSH 'd' test_lots_paras 
PUSH 5 test_lots_paras 
CALL test_lots_paras  #26
PRINT #26  
CALL really_void  #27
CALL really_void2  #28
CALL really_void3  #29
ARYS 0 'A' chs
ARYS 1 'B' chs
ARYS 2 'C' chs
ARYS 3 'D' chs
ARYS 4 'E' chs
PRINTS 26  
PUSH 0 permutation 
PUSH 5 permutation 
CALL permutation  #30
RET   
EXIT   
i
DIV 34 4 #119
MUL #119 6 #120
DIV 122 10 #121
ADD #120 #121 #122
ARYL t_array2 #122 #123
DIV #123 23 #124
MUL 22 i #125
DIV #125 23 #126
ARYL t_array2 1 #127
MUL #127 1000 #128
MUL #126 #128 #129
DIV #129 1000 #130
DIV 57 17 #131
ADD #130 #131 #132
ARYL t_array2 #132 #133
DIV #133 30 #134
ADD #124 #134 #135
ARYL t_array2 #135 #136
PUSH #136 factorial 
CALL factorial  #137
PRINT #137  
GOTO $LABEL61  
SET $LABEL58  
SET $LABEL61  
RET   
EXIT   
