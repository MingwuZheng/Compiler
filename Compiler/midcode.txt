SET recursive_cal  
ENTER   
EQL cur_pointer amount #1
BZ $LABEL1 #1 
ARYL f 0 #2
PRINT #2  
BECOME 1  i
SET $LABEL2  
LES i amount #3
BZ $LABEL3 #3 
PRINTS 0  
ARYL f i #4
PRINT #4  
ADD i 1 #5
BECOME #5  i
GOTO $LABEL2  
SET $LABEL3  
PRINTS 1  
RET 0  
GOTO $LABEL4  
SET $LABEL1  
LES cur_pointer amount #6
BZ $LABEL5 #6 
BECOME min  i
SET $LABEL6  
ADD cur_pointer numbers_to_be_selected #7
SUB #7 amount #8
ADD #8 1 #9
LEQ i #9 #10
BZ $LABEL7 #10 
ARYS cur_pointer i f
ADD cur_pointer 1 #11
ADD #11 0 #12
ADD i 1 #13
ADD #13 0 #14
PUSH #12 recursive_cal 
PUSH #14 recursive_cal 
CALL recursive_cal  #15
NEG 1  #16
EQL #15 #16 #17
BZ $LABEL8 #17 
NEG 1  #18
RET #18  
SET $LABEL8  
SET $LABEL9  
ADD i 1 #19
BECOME #19  i
GOTO $LABEL6  
SET $LABEL7  
RET 0  
GOTO $LABEL10  
SET $LABEL5  
NEG 1  #20
RET #20  
SET $LABEL10  
SET $LABEL4  
EXIT   
SET initial  
ENTER   
BECOME 0  i
SET $LABEL11  
ARYS i var f
ADD i 1 #1
BECOME #1  i
LEQ i lenth #2
BNZ $LABEL11 #2 
RET   
EXIT   
SET echo_lower  
ENTER   
GEQ a 97 #1
BZ $LABEL12 #1 
LEQ a 122 #2
BZ $LABEL13 #2 
RET a  
GOTO $LABEL14  
SET $LABEL13  
PRINTS 2  
RET '0'  
SET $LABEL14  
GOTO $LABEL15  
SET $LABEL12  
PRINTS 2  
RET '0'  
SET $LABEL15  
EXIT   
SET test  
ENTER   
BECOME 'i'  test_letter_i
BECOME 'j'  test_letter_j
BECOME 'k'  test_letter_k
BECOME 'l'  test_letter_l
BECOME 109  test_letter_m
BECOME 110  test_letter_n
BECOME 111  test_letter_e
BECOME 112  test_letter_s
NEG 1  #1
ARYS 0 #1 a0
ARYL a0 0 #2
MUL #2 -2 #3
NEG #3  #4
ADD 99 0 #5
PUSH #5 echo_lower 
CALL echo_lower  #6
SUB 101 #6 #7
MUL #7 1 #8
DIV #8 1 #9
ADD #4 #9 #10
ARYS 1 #10 a0
ARYL a0 1 #11
NEQ #11 0 #12
BZ $LABEL16 #12 
PRINTS 2  
SET $LABEL16  
SET $LABEL17  
ARYL a0 0 #13
ADD #13 1 #14
PRINT #14  
ARYL a0 1 #15
PRINT #15  
PRINTC 116  
PRINT test_letter_e  
PRINT test_letter_s  
PRINTC 116  
PRINTS 1  
EXIT   
SET main  
ENTER   
CALL test  #1
SCAN numbers_to_be_selected  
SCAN amount  
ADD amount 1 #2
GTR #2 1000 #3
BZ $LABEL18 #3 
PRINTS 3  
RET   
SET $LABEL18  
SET $LABEL19  
ADD 0 0 #4
ADD amount 1 #5
MUL #5 1 #6
ADD #6 0 #7
PUSH #4 initial 
PUSH #7 initial 
CALL initial  #8
ADD 0 0 #9
ADD 1 0 #10
PUSH #9 recursive_cal 
PUSH #10 recursive_cal 
CALL recursive_cal  #11
NEG 1  #12
EQL #11 #12 #13
BZ $LABEL20 #13 
PRINTS 3  
SET $LABEL20  
SET $LABEL21  
EXIT   
